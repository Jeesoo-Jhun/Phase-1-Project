<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='ufo-sightings-transformed' inline='true' name='federated.0jimqyk1efxeux1fueizi1isz0ug' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ufo-sightings-transformed' name='textscan.0cuk7xt078nk1t111fm0p04w4ya9'>
            <connection class='textscan' directory='C:/Users/erica/Documents/Flatiron/Phase-1-Project/data/ufo_data' filename='ufo-sightings-transformed.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0cuk7xt078nk1t111fm0p04w4ya9' name='ufo-sightings-transformed.csv' table='[ufo-sightings-transformed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' name='Date_time' ordinal='1' />
            <column datatype='date' name='date_documented' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='integer' name='Hour' ordinal='5' />
            <column datatype='string' name='Season' ordinal='6' />
            <column datatype='string' name='Country_Code' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='Region' ordinal='9' />
            <column datatype='string' name='Locale' ordinal='10' />
            <column datatype='real' name='latitude' ordinal='11' />
            <column datatype='real' name='longitude' ordinal='12' />
            <column datatype='string' name='UFO_shape' ordinal='13' />
            <column datatype='real' name='length_of_encounter_seconds' ordinal='14' />
            <column datatype='string' name='Encounter_Duration' ordinal='15' />
            <column datatype='string' name='Description' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0cuk7xt078nk1t111fm0p04w4ya9' name='ufo-sightings-transformed.csv' table='[ufo-sightings-transformed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' name='Date_time' ordinal='1' />
            <column datatype='date' name='date_documented' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='integer' name='Hour' ordinal='5' />
            <column datatype='string' name='Season' ordinal='6' />
            <column datatype='string' name='Country_Code' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='Region' ordinal='9' />
            <column datatype='string' name='Locale' ordinal='10' />
            <column datatype='real' name='latitude' ordinal='11' />
            <column datatype='real' name='longitude' ordinal='12' />
            <column datatype='string' name='UFO_shape' ordinal='13' />
            <column datatype='real' name='length_of_encounter_seconds' ordinal='14' />
            <column datatype='string' name='Encounter_Duration' ordinal='15' />
            <column datatype='string' name='Description' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date_time]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Date_time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_documented</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_documented]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>date_documented</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Locale</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Locale]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Locale</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UFO_shape</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UFO_shape]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>UFO_shape</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>length_of_encounter_seconds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[length_of_encounter_seconds]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>length_of_encounter_seconds</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Encounter_Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Encounter_Duration]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Encounter_Duration</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[ufo-sightings-transformed.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[Country_Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date time' datatype='datetime' name='[Date_time]' role='dimension' type='ordinal' />
      <column caption='Encounter Duration' datatype='string' name='[Encounter_Duration]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <column caption='UFO shape' datatype='string' name='[UFO_shape]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ufo-sightings-transformed.csv' datatype='table' name='[__tableau_internal_object_id__].[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]' role='measure' type='quantitative' />
      <column caption='Date Documented' datatype='date' name='[date_documented]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Length Of Encounter Seconds' datatype='real' name='[length_of_encounter_seconds]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column-instance column='[Date_time]' derivation='None' name='[none:Date_time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[UFO_shape]' derivation='None' name='[none:UFO_shape:nk]' pivot='key' type='nominal' />
      <column-instance column='[length_of_encounter_seconds]' derivation='None' name='[none:length_of_encounter_seconds:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Date time,Length Of Encounter Seconds)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date_time:qk]' />
          <groupfilter function='level-members' level='[none:length_of_encounter_seconds:qk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/erica/AppData/Local/Temp/TableauTemp/#TableauTemp_1vasbzd17rulhs177t60c0kf76pw.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/27/2024 07:42:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80328</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Date_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date_time</remote-alias>
              <ordinal>1</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>76187</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_documented</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_documented]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_documented</remote-alias>
              <ordinal>2</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>684</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>4</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>5</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Season</remote-alias>
              <ordinal>6</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_Code</remote-alias>
              <ordinal>7</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>9</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>272</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Locale</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Locale]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Locale</remote-alias>
              <ordinal>10</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9414</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>11</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12059</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>12</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11923</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UFO_shape</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UFO_shape]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UFO_shape</remote-alias>
              <ordinal>13</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>length_of_encounter_seconds</remote-name>
              <remote-type>5</remote-type>
              <local-name>[length_of_encounter_seconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>length_of_encounter_seconds</remote-alias>
              <ordinal>14</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Encounter_Duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Encounter_Duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Encounter_Duration</remote-alias>
              <ordinal>15</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2695</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Description</remote-alias>
              <ordinal>16</ordinal>
              <family>ufo-sightings-transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80328</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:UFO_shape:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Triangle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Light&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cigar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rectangle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Disk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cylinder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Circle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Round&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Formation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Changed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flare&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sphere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flash&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hexagon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crescent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Teardrop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Changing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oval&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fireball&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chevron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pyramid&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ufo-sightings-transformed.csv' id='ufo-sightings-transformed.csv_CA015341BDA8483895118BE2B10983C8'>
            <properties context=''>
              <relation connection='textscan.0cuk7xt078nk1t111fm0p04w4ya9' name='ufo-sightings-transformed.csv' table='[ufo-sightings-transformed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' name='Date_time' ordinal='1' />
                  <column datatype='date' name='date_documented' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Month' ordinal='4' />
                  <column datatype='integer' name='Hour' ordinal='5' />
                  <column datatype='string' name='Season' ordinal='6' />
                  <column datatype='string' name='Country_Code' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='Region' ordinal='9' />
                  <column datatype='string' name='Locale' ordinal='10' />
                  <column datatype='real' name='latitude' ordinal='11' />
                  <column datatype='real' name='longitude' ordinal='12' />
                  <column datatype='string' name='UFO_shape' ordinal='13' />
                  <column datatype='real' name='length_of_encounter_seconds' ordinal='14' />
                  <column datatype='string' name='Encounter_Duration' ordinal='15' />
                  <column datatype='string' name='Description' ordinal='16' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='ufo-sightings-transformed' name='federated.0jimqyk1efxeux1fueizi1isz0ug' />
          </datasources>
          <datasource-dependencies datasource='federated.0jimqyk1efxeux1fueizi1isz0ug'>
            <column caption='UFO shape' datatype='string' name='[UFO_shape]' role='dimension' type='nominal' />
            <column-instance column='[UFO_shape]' derivation='Count' name='[cnt:UFO_shape:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UFO_shape]' derivation='None' name='[none:UFO_shape:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:UFO_shape:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='%null%' />
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jimqyk1efxeux1fueizi1isz0ug].[cnt:UFO_shape:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]</rows>
        <cols>[federated.0jimqyk1efxeux1fueizi1isz0ug].[cnt:UFO_shape:qk]</cols>
      </table>
      <simple-id uuid='{DF35314F-BDE8-4DB3-A294-5F10DAFE225A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='ufo-sightings-transformed' name='federated.0jimqyk1efxeux1fueizi1isz0ug' />
          </datasources>
          <datasource-dependencies datasource='federated.0jimqyk1efxeux1fueizi1isz0ug'>
            <column caption='Date time' datatype='datetime' name='[Date_time]' role='dimension' type='ordinal' />
            <column caption='UFO shape' datatype='string' name='[UFO_shape]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[UFO_shape]' derivation='Count' name='[cnt:UFO_shape:qk]' pivot='key' type='quantitative' />
            <column caption='Length Of Encounter Seconds' datatype='real' name='[length_of_encounter_seconds]' role='measure' type='quantitative' />
            <column-instance column='[Date_time]' derivation='None' name='[none:Date_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UFO_shape]' derivation='None' name='[none:UFO_shape:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[length_of_encounter_seconds]' derivation='None' name='[none:length_of_encounter_seconds:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[Exclusions (Date time,Length Of Encounter Seconds)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Date_time:qk]' />
                <groupfilter function='level-members' level='[none:length_of_encounter_seconds:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='50400.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1966-09-30 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2000-03-15 06:39:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2000-03-15 16:30:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='54000.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1997-08-15 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-06-09 16:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-09-04 00:01:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-12-03 06:55:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='56000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-12-02 19:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='57600.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1990-07-12 11:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='60600.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-03-15 21:30:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='64800.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1997-07-07 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-02-09 14:08:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='68814.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-11-18 19:06:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='72000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-08-07 12:15:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='73800.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1973-05-01 20:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1987-02-20 01:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1987-06-07 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1989-08-20 14:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-02-25 03:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-04-24 00:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-08-15 17:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1999-10-21 03:45:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2000-09-21 04:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-02-04 22:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-03-05 02:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-05-04 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-03-11 04:25:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-03-13 23:20:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-08-03 23:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-09-22 04:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-10-09 02:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-05-01 04:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-07-16 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-05-06 20:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-05-23 02:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-10-22 18:30:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='86400.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1945-04-01 10:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1958-05-16 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1958-06-06 09:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1968-08-01 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1976-07-30 20:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1977-01-18 17:45:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1983-04-20 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1995-06-13 14:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1997-08-03 10:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1997-12-26 20:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1999-09-08 01:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2000-08-01 13:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-05-10 17:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-09-12 21:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-11-06 15:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-12-01 21:54:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-01-03 19:15:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-05-19 00:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-04-18 12:34:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-04-22 23:14:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-01-15 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-03-03 20:20:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-06-16 13:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-01-21 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-02-25 06:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-03-19 11:22:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-05-25 13:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-08-27 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-04-10 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-04-16 20:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-07-08 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-06-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-06-01 02:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-06-04 16:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-07-31 22:40:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-01-14 02:15:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-11-08 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-11-20 08:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='97200.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1968-08-16 03:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='108000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-02-07 02:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='109800.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1968-05-12 09:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1976-03-20 23:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1995-06-01 20:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-12-10 01:15:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2000-08-19 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-01-01 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-11-27 04:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-11-27 04:45:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-01-06 04:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-07-12 16:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-08-04 01:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-08-12 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-02-10 10:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-10-22 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-01-09 05:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-03-14 19:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='145800.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1999-12-03 19:30:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='162000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-05-18 22:50:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='172800.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1961-06-30 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1961-09-01 20:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1976-01-02 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1976-08-15 02:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1979-06-01 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1997-05-28 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1999-05-02 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1999-08-29 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-09-05 21:45:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-12-07 21:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-09-12 21:07:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-10-11 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-10-12 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-12-01 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-01-25 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-09-14 14:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-05-13 03:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-08-07 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-02-12 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-04-13 11:11:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-01-02 05:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-04-12 12:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-06-25 09:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-10-02 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-11-05 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-02-20 15:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-05-29 23:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-11-23 17:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-12-31 21:54:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2014-02-10 21:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2014-04-22 21:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='181800.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1950-07-02 21:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='219300.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1996-08-23 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-11-09 12:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='253800.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-07-04 22:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='259200.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1963-06-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1969-10-13 21:15:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1972-06-01 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1975-06-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1978-04-01 21:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1979-11-10 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1982-06-01 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1984-08-15 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1989-03-06 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1991-06-01 18:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1991-08-15 03:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1995-06-30 13:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2000-07-15 09:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-01-06 18:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-12-08 18:45:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-01-15 03:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-11-12 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-08-19 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-05-09 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-06-01 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-01-15 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-05-18 08:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-04-13 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-06-10 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-12-03 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-06-01 15:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-07-17 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-03-13 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-05-28 00:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='345600.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1966-06-25 21:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-09-12 09:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-06-21 18:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-01-06 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-03-14 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-05-12 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-06-26 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-06-13 05:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-12-27 19:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-02-20 19:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-08-23 14:53:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-07-10 22:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-03-15 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-04-09 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-05-11 22:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='361800.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-11-27 19:30:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='432000.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1958-05-07 10:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1993-04-01 06:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1995-06-30 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-08-02 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-10-15 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-11-24 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-10-19 23:09:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-04-11 00:58:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-06-10 17:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='604800.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1958-05-20 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1965-08-10 18:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1988-08-20 04:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2003-07-21 02:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-09-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2005-11-22 04:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-01-02 18:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-01-13 11:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-04-08 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-01-24 18:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-09-13 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-03-18 23:47:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-04-28 09:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-05-04 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-06-03 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-10-23 01:30:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='777600.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1945-08-16 11:30:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='1080000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1995-03-20 23:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='1209600.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1968-06-01 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1980-06-15 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1995-01-15 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-05-30 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-03-01 14:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-10-08 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-11-03 19:21:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-11-12 21:30:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='1814400.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1997-03-12 21:50:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-01-03 22:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-01-25 19:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-06-30 03:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-01-05 16:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='2102400.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2011-05-04 09:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-12-31 00:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='2419200.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1970-02-15 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1987-07-28 15:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='2631600.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1967-06-15 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1996-07-05 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-05-10 22:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-02-24 17:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-12-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2007-10-21 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-12-23 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-04-22 21:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='3654000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1966-09-15 09:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='4838400.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1988-06-01 22:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='5263200.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1978-02-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1998-03-01 20:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='6120000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1965-12-09 00:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='6312000.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1993-03-01 05:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2001-10-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-06-30 22:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-02-07 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2004-08-08 12:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2006-12-31 23:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2009-12-31 23:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-06-15 21:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='7894800.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1984-03-15 20:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='9468000.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1977-01-01 02:30:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-06-06 00:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='10526400.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1994-03-01 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2008-08-03 21:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2013-10-07 20:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='25248000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1969-06-30 22:45:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='52623200.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#1983-04-02 00:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2002-08-24 01:00:00#' />
                      <groupfilter function='member' level='[none:Date_time:qk]' member='#2012-08-10 21:00:00#' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='66276000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1991-09-15 18:00:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='82800000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#2010-06-03 23:30:00#' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:length_of_encounter_seconds:qk]' member='97836000.0' />
                    <groupfilter function='member' level='[none:Date_time:qk]' member='#1983-10-01 17:00:00#' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Date_time:qk]' />
                  <hierarchy name='[none:length_of_encounter_seconds:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:UFO_shape:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='%null%' />
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='&quot;Fireball&quot;' />
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='&quot;Flare&quot;' />
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='&quot;Flash&quot;' />
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='&quot;Light&quot;' />
                <groupfilter function='member' level='[none:UFO_shape:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jimqyk1efxeux1fueizi1isz0ug].[Exclusions (Date time,Length Of Encounter Seconds)]</column>
            <column>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jimqyk1efxeux1fueizi1isz0ug].[cnt:UFO_shape:qk]</rows>
        <cols>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{764BA1A9-C615-4C32-89E2-085A93BFC01C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='ufo-sightings-transformed' name='federated.0jimqyk1efxeux1fueizi1isz0ug' />
          </datasources>
          <datasource-dependencies datasource='federated.0jimqyk1efxeux1fueizi1isz0ug'>
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Description:nk]' value='1508' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Description:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{C29D8D3A-7C8D-4A6B-AF2E-A5123A68E73D}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='ufo-sightings-transformed' name='federated.0jimqyk1efxeux1fueizi1isz0ug' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jimqyk1efxeux1fueizi1isz0ug'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:longitude:qk]' field-type='quantitative' max='35224190.734844454' min='20486343.121721353' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:latitude:qk]' field-type='quantitative' max='7786812.0314725777' min='-116561.60139280505' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Season:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='19' />
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:latitude:qk]</rows>
        <cols>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{0C571FDC-9132-4B0E-B0B1-4AF8C91A089C}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='ufo-sightings-transformed' name='federated.0jimqyk1efxeux1fueizi1isz0ug' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jimqyk1efxeux1fueizi1isz0ug'>
            <column caption='Encounter Duration' datatype='string' name='[Encounter_Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Encounter_Duration]' derivation='None' name='[none:Encounter_Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Season:nk]' />
              <size column='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Encounter_Duration:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='22' />
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:latitude:qk]</rows>
        <cols>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{82CA784B-3D56-40B9-B450-FA6F8AC78A90}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CD0D4F5-559D-40DA-A66C-8F9103814FA5}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:UFO_shape:nk]</field>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Year:qk]</field>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[yr:Date_time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25E6C2C3-F9E9-493C-A02A-CBABAE196757}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1DFDE1CB-6AEF-499B-8378-437D54AD0D0D}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Encounter_Duration:nk]</field>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DAD9B6D2-0479-4B50-843F-88BB9B27760D}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Season:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Encounter_Duration:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Encounter_Duration:nk]</field>
            <field>[federated.0jimqyk1efxeux1fueizi1isz0ug].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{962F5FFA-B0A6-45FF-8DF1-15BD039E52EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      V2VjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
